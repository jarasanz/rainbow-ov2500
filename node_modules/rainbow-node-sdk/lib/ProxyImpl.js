"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const LOG_ID = "PROXY - ";
class ProxyImpl {
    constructor(config, _logger) {
        this._logger = _logger;
        this._protocol = config.protocol;
        this._host = config.host;
        this._port = config.port;
        this._activated = this._host.length > 0;
        this._user = config.user;
        this._password = config.password;
        this._secureProtocol = config.secureProtocol ? config.secureProtocol : null;
        if (this._user === "" || this._user) {
            this._proxyURL = encodeURI(this._protocol + "://" + this._user + ":" + this._password + "@" + this._host + ":" + this._port.toString());
            //this._proxyURL = this._protocol + "://" + this._user + ":" + this._password + "@" + this._host + ":" + this._port.toString();
            this._logger.log("info", LOG_ID + "(constructor) proxy configured with authent");
            this._logger.log("internal", LOG_ID + "(constructor) proxy configured with authent : ", this._proxyURL);
        }
        else {
            this._proxyURL = this._protocol + "://" + this._host + ":" + this._port.toString();
        }
        if (this._activated) {
            this._logger.log("info", LOG_ID + "(constructor) proxy configured.");
            this._logger.log("internal", LOG_ID + "(constructor) proxy configured : ", this._proxyURL);
        }
    }
    get proxyURL() {
        return this._proxyURL;
    }
    get isProxyConfigured() {
        return this._activated;
    }
    get secureProtocol() {
        return this._secureProtocol;
    }
    set secureProtocol(value) {
        this._secureProtocol = value;
    }
}
exports.ProxyImpl = ProxyImpl;
module.exports.ProxyImpl = ProxyImpl;
//# sourceMappingURL=ProxyImpl.js.map